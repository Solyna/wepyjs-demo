<style lang="css">
    /* 进度条 */

    .progress_box {
        position: relative;
        width: 100px;
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .progress_bg {
        position: absolute;
        width: 80px;
        height: 80px;
    }

    .progress_canvas {
        width: 80px;
        height: 80px;
    }

    .progress_text {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .progress_info {
        font-size: 30 rpx;
        letter-spacing: 2 rpx;
        color: #217dde;
    }

    .progress_dot {
        width: 16 rpx;
        height: 16 rpx;
        border-radius: 50%;
        background-color: #fb9126;
    }
    .swiper-container{
        width: 750rpx;
        height: 100%;
        border: 2rpx solid red;
        margin-top: 40rpx;
    }
    .task-container {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        border: 2rpx solid #e9e9e9;
        margin-top: 20rpx;
        padding: 0 30rpx;
        background-color: white;
    }

    .task-container-child {
        /* border: 2rpx solid red; */
        height: 100%;
    }

    .task-title {
        font-size: 32rpx;
        color: #333;
        padding: 10rpx 0;
        border-bottom: 2rpx solid #e9e9e9;
    }

    .task-content {
        display: flex;
        flex-direction: row;
        /* border: 2rpx solid black; */
        align-items: center;
        justify-content: space-around;
        padding: 0 30rpx 40rpx 30rpx;
        margin-top: 20rpx;
    }

    .task-content-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .task-content-icon {
        font-size: 70rpx;
        color: #217dde;
    }

    .task-content-text {
        font-size: 32rpx;
        color: #217dde;
    }

</style>
<template>
    <view class='container'>
        <view class='container'>
            <!--<view class='progress_box'>-->
                <!--<canvas class="progress_bg" canvas-id="canvasProgressbg"></canvas>-->
                <!--<canvas class="progress_canvas" canvas-id="canvasProgress"></canvas>-->
                <!--<view class="progress_text">-->
                    <!--<text class='progress_info'> {{progress_txt}}</text>-->
                <!--</view>-->
            <!--</view>-->

            <view class="swiper-container">
                <!--swiper-->
                <swiper indicator-dots="{{indicatorDots}}"
                        autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}">
                    <repeat for="{{taskList}}" key="id" item="item">
                        <block>
                            <swiper-item>
                                <view class='task-content-item'>
                                    <view class='container'>
                                        <view class='progress_box'>
                                            <canvas class="progress_bg" canvas-id="{{item.progressbg}}"></canvas>
                                            <canvas class="progress_canvas" canvas-id="{{item.progress}}"></canvas>
                                            <view class="progress_text">
                                                <text class='progress_info'> {{item.progress_txt}}</text>
                                            </view>
                                        </view>
                                    </view>
                                    <text class='task-content-text'>{{item.title}}</text>
                                </view>
                            </swiper-item>
                        </block>
                    </repeat>
                    <!--<repeat for="{{imgUrls}}" item="item">-->
                        <!--<block>-->
                            <!--<swiper-item>-->
                                <!--<view style="width:750rpx;height: 150rpx">{{item}}</view>-->
                            <!--</swiper-item>-->
                        <!--</block>-->
                    <!--</repeat>-->

                </swiper>
            </view>

        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import Panel from '@/components/panel' // alias example
    import Counter from 'counter' // alias example
    import List from '../components/list' // aliasFields example
    import moduleA from 'module-a' // aliasFields ignore module example
    import Group from '../components/group'
    import Toast from 'wepy-com-toast'
    import testMixin from '../mixins/test'

    console.log('moduleA ignored: ', moduleA); // => moduleA ignored: {}


    export default class progress extends wepy.page {
        config = {
            navigationBarTitleText: '进度条'
        };
        components = {
            panel: Panel,
            counter1: Counter,
            counter2: Counter,
            list: List,
            group: Group,
            toast: Toast
        };

        mixins = [testMixin];

        data = {
            progress_txt: '65/122',
            imgUrls: [
                '../images/my.png',
                '../images/my1.png',
                '../images/my2.png',
            ],
            taskList: [{
                id: 1,
                title: '留档量',
                progress_txt: '65/106',
                progressbg: 'canvasProgressbg',
                progress: 'canvasProgress'
            }, {
                id: 2,
                title: '邀约试驾',
                progress_txt: '15/46',
                progressbg: 'canvasProgressbg1',
                progress: 'canvasProgress1'
            },
                {
                    id: 3,
                    title: '回访数量',
                    progress_txt: '65/250',
                    progressbg: 'canvasProgressbg2',
                    progress: 'canvasProgress2'
                }
            ],
            indicatorDots: true,
            autoplay: true,
            interval: 5000,
            duration: 1000
        };

        computed = {};

        methods = {}

        onReady() {
            const a = ['canvasProgressbg', 'canvasProgressbg1', 'canvasProgressbg2']
            const b = [{
                step: 0.5,
                name: 'canvasProgress'
            }, {
                step: 1,
                name: 'canvasProgress1'
            }, {
                step: 0.8,
                name: 'canvasProgress2'
            }];
            a.forEach((item) => {
                this.drawProgressbg(item);
            });


            b.forEach((item) => {
                this.drawCircle(item.step, item.name)
            })
        }

        onLoad() {

        }
        drawProgressbg(item) {
            // 使用 wx.createContext 获取绘图上下文 context
            var ctx = wx.createCanvasContext(item)
            ctx.setLineWidth(6); // 设置圆环的宽度
            ctx.setStrokeStyle('#e9e9e9'); // 设置圆环的颜色
            ctx.setLineCap('round') // 设置圆环端点的形状
            ctx.beginPath(); //开始一个新的路径
            ctx.arc(40, 40, 30, 0, 2 * Math.PI, false);
            //设置一个原点(110,110)，半径为100的圆的路径到当前路径
            ctx.stroke(); //对当前路径进行描边
            ctx.draw();
        }
        drawCircle(step, item) {
            var context = wx.createCanvasContext(item);
            // 设置渐变
            // var gradient = context.createLinearGradient(200, 100, 100, 200);
            // gradient.addColorStop("0", "#2661DD");
            // gradient.addColorStop("0.5", "#40ED94");
            // gradient.addColorStop("1.0", "#5956CC");
            context.setStrokeStyle('#217dde'); // 设置圆环的颜色

            context.setLineWidth(8);
            // context.setStrokeStyle(gradient);
            context.setLineCap('round')
            context.beginPath();
            // 参数step 为绘制的圆环周长，从0到2为一周 。 -Math.PI / 2 将起始角设在12点钟位置 ，结束角 通过改变 step 的值确定
            context.arc(40, 40, 30, -Math.PI / 2, step * Math.PI - Math.PI / 2, false);
            context.stroke();
            context.draw()
        }

        // drawProgressbg() {
        //     // 使用 wx.createContext 获取绘图上下文 context
        //     var ctx = wx.createCanvasContext('canvasProgressbg')
        //     ctx.setLineWidth(6); // 设置圆环的宽度
        //     ctx.setStrokeStyle('#e9e9e9'); // 设置圆环的颜色
        //     ctx.setLineCap('round') // 设置圆环端点的形状
        //     ctx.beginPath(); //开始一个新的路径
        //     ctx.arc(40, 40, 30, 0, 2 * Math.PI, false);
        //     //设置一个原点(110,110)，半径为100的圆的路径到当前路径
        //     ctx.stroke(); //对当前路径进行描边
        //     ctx.draw();
        // }
        //
        // drawCircle(step) {
        //     var context = wx.createCanvasContext('canvasProgress');
        //     // 设置渐变
        //     // var gradient = context.createLinearGradient(200, 100, 100, 200);
        //     // gradient.addColorStop("0", "#2661DD");
        //     // gradient.addColorStop("0.5", "#40ED94");
        //     // gradient.addColorStop("1.0", "#5956CC");
        //     context.setStrokeStyle('#217dde'); // 设置圆环的颜色
        //
        //     context.setLineWidth(8);
        //     // context.setStrokeStyle(gradient);
        //     context.setLineCap('round')
        //     context.beginPath();
        //     // 参数step 为绘制的圆环周长，从0到2为一周 。 -Math.PI / 2 将起始角设在12点钟位置 ，结束角 通过改变 step 的值确定
        //     context.arc(40, 40, 30, -Math.PI / 2, step * Math.PI - Math.PI / 2, false);
        //     context.stroke();
        //     context.draw()
        // }
    }
</script>
